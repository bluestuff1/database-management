8.1.1
The insert fails because there is no parent row. First, a row with the purchaseID of 111 has to be added to the Purchase table. 

8.1.2
The statement uses the autoincrement, and the number created should be the next up from 111 which ase used before. Rolling back the statement means losing the number 112, which will be replaced by 113 when the statement is run again. 

The easy solution to the second part is looking up 113 in the table and putting it into the second insert statement, but this is what we are looking for:

Insert into OrderItem (purchaseID, itemNo, productName, orderedqty, quotedPrice) VALUES ((SELECT last_insert_id()), 1, 'Cricket bat', 2, 80.50);

8.1.3
INSERT into Purchase (custName, shipDate) VALUES ('Max Wang', '2016-05-12');
This has no value for orderedDate which is not nullable. The orderedDate has to be added or the insert will always fail.

8.1.4
Delete will fail because the child row would be orphaned. Have to remove the child row first.

8.1.5
Simple update statements with a restriction (!)

8.2.1
Depends on the table the student created.